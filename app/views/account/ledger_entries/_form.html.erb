<% cancel_path ||= ledger_entry.persisted? ? [:account, ledger_entry] : [:account, @company, :ledger_entries] %>
<script>
    var ledger_entry_details_data =
    <%= raw(ledger_entry.ledger_entry_details.to_json(
   :include => [
   :ledger_account
   ])) %>
    var ledger_accounts_data =
    <%= raw(@company.ledger_accounts.to_json) %>

    // create new array from ledger_accounts_data, containing only id and title
    var ledger_accounts = [];
    for (var i = 0; i < ledger_accounts_data.length; i++) {
        ledger_accounts.push({
            value: ledger_accounts_data[i].id,
            text: `${ledger_accounts_data[i].ledger_account_number}-${ledger_accounts_data[i].title}`
        });
    }

    console.table(ledger_entry_details_data)
    // render json: ledger_entry_details_data
    $(function () { //shorthand document.ready function
        $('#ledger_entry_form').on('submit', function (e) { //use on if jQuery 1.7+
            var formData = $("#grid").data("kendoGrid").dataSource.data();
            // Loop through the data and add the data to the form
            for (var i = 0; i < formData.length; i++) {
                $('<input />').attr('type', 'hidden')
                    .attr('name', "ledger_entry[ledger_entry_details_attributes][" + i + "][order_number]")
                    .attr('value', i)
                    .appendTo('#ledger_entry_form');
                $('<input />').attr('type', 'hidden')
                    .attr('name', "ledger_entry[ledger_entry_details_attributes][" + i + "][ledger_account_id]")
                    .attr('value', formData[i].ledger_account_id)
                    .appendTo('#ledger_entry_form');
                $('<input />').attr('type', 'hidden')
                    .attr('name', "ledger_entry[ledger_entry_details_attributes][" + i + "][amount]")
                    .attr('value', formData[i].amount)
                    .appendTo('#ledger_entry_form');
                $('<input />').attr('type', 'hidden')
                    .attr('name', "ledger_entry[ledger_entry_details_attributes][" + i + "][note]")
                    .attr('value', formData[i].note)
                    .appendTo('#ledger_entry_form');
                // add Credit to the form
                $('<input />').attr('type', 'hidden')
                    .attr('name', "ledger_entry[ledger_entry_details_attributes][" + i + "][credit]")
                    .attr('value', formData[i].credit)
                    .appendTo('#ledger_entry_form');
                // add Debit to the form
                $('<input />').attr('type', 'hidden')
                    .attr('name', "ledger_entry[ledger_entry_details_attributes][" + i + "][debit]")
                    .attr('value', formData[i].debit)
                    .appendTo('#ledger_entry_form');
            }
            var data = $("#ledger_entry_form :input").serializeArray();

            debugger
            console.log(data); //use the console for debugging, F12 in Chrome, not alerts
        });
    });
</script>

<%= form_with model: ledger_entry, :html => { :id => "ledger_entry_form" }, url: (ledger_entry.persisted? ? [:account, ledger_entry] : [:account, @company, :ledger_entries]), local: true, class: 'form' do |form| %>
  <%= render "shared/limits/form", form: form, cancel_path: cancel_path do %>
    <%= render 'account/shared/forms/errors', form: form %>

    <% with_field_settings form: form do %>

      <%= render 'shared/fields/date_field', method: :post_date %>

    <% end %>

    <div class="grid grid-cols-1 gap-1">
      <div class="col-span-1">
        <%# Horizontal input fields for ledger_entry_details %>
        <%#= render 'account/ledger_entry_details/form_sm' %>
        <div id="example">
          <div id="container"></div>
          <div id="grid"></div>
          <script>

              var localDataSource = new kendo.data.DataSource({
                  schema: {
                      model: {
                          id: "id",
                          fields: {
                              id: {editable: false, nullable: true},
                              note: {type: "string"},
                              'ledger_account.title': {type: "string"},
                              company_id: {type: "number"},
                              order_number: {type: "number", validation: {required: true}},
                              ledger_account_id: {type: "number", validation: {required: true}},
                              amount: {type: "number"},
                              debit: {type: "number"},
                              credit: {type: "number"},
                              _destroy: {type: "boolean"}
                          }
                      }
                  },
                  aggregate: [
                      {field: "debit", aggregate: "sum"},
                      {field: "credit", aggregate: "sum"},
                      {field: "amount", aggregate: "sum"}
                  ],
                  data: ledger_entry_details_data,
                  sort: {field: "order_number", dir: "asc"}
              });
              localDataSource.read();
              var currentView = localDataSource.view();
              currentView.forEach(function (el) {

                  //$('#container').append(`<p>order: ${el.order_number} --> <b>aid: ${el.ledger_account_id}</b> amount:${el.amount}</p> `)
              });

              function ledgerAccountDropDownEditor(container, options) {
                  $('<input required name="' + options.field + '"/>')
                      .appendTo(container)
                      .kendoDropDownList({
                          autoBind: false,
                          dataTextField: "title",
                          dataValueField: "id",
                          dataSource: {
                              data: ledger_accounts_data
                          }
                      });
              }

              $(document).ready(function () {

                  $("#grid").kendoGrid({


                      dataSource: localDataSource,
                      editable: 'incell',


                      toolbar: ["create"],
                      edit: function(e) {
                          if (e.model.isNew()) {
                              var formData = $("#grid").data("kendoGrid").dataSource.data();
                              // get first form data row if any
                              var firstFormData = formData[1];
                              if(firstFormData){
                                  e.model.note = firstFormData.note;
                              }

                          }
                      },
                      height: 550,
                      columns: [
                          {
                              field: "ledger_account_id",
                              width: "400px",
                              values: ledger_accounts,
                              title: "Ledger Account"
                          },
                          {
                              field: "debit",
                              title: "Debit",
                              format: "{0:c}",
                              footerTemplate: "#= kendo.toString(sum, 'c') #"

                          },
                          {
                              field: "credit",
                              title: "Credit",
                              format: "{0:c}",
                              footerTemplate: "#= kendo.toString(sum, 'c') #"
                          },
                          {
                              field: "amount",
                              title: "Amount",
                              format: "{0:c}",
                              footerTemplate: "#= kendo.toString(sum, 'c') #"
                          }, {
                              field: "note",
                              title: "Note"
                          },
                          {command: ["destroy"], title: "&nbsp;", width: "250px"}]
                      ,
                  });
              });
          </script>

        </div>
      </div>
    </div>



    <div class="buttons">
      <%= form.submit (form.object.persisted? ? t('.buttons.update') : t('.buttons.create')), class: "button" %>
      <%= link_to t('global.buttons.cancel'), cancel_path, class: "button-secondary" %>
    </div>
  <% end %>
<% end %>



<style type="text/css">
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0, 0, 0, .2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>